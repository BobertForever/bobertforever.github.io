{"name":"Robert Lynch","tagline":"I write code and code accessories.","body":"# Hi, my name is Robert\r\nI'm a junior Computer Science major at the University of Texas at Austin. I love coming up with effective and unique solutions to difficult problems in code. I spend a lot of free time hacking on my projects and challenging myself with new problems.\r\n\r\n***\r\n\r\n# My Projects\r\n\r\n### Paranoia and Paranoia-nodejs\r\nOne of the first applications I built was a manager for the community game \"Assassins\". The game works by first assigning a group of people \"targets\" in a circular fashion, and then creating a technique in which people can \"kill\" their targets, until one person remains, who is the winner. **Paranoia** is the original implementation, written almost solely in PHP using SQL for the database. Upon revisiting this project after it's initial creation, I made **Paranoia-nodejs**, a re-implementation in Node.js using MongoDB as the database.\r\n\r\n[View Paranoia on Github](https://github.com/BobertForever/Paranoia)  \r\n[View Paranoia-nodejs on Github](https://github.com/BobertForever/Paranoia-nodejs)\r\n\r\n### GlassNote\r\n**GlassNote** is a teleprompter and presentation remote for Google Glass I started development on during [HackTX](http://hacktx.com/) 2014. In its original form, it used **Strut-for-Glassnote**, a fork of [Strut](https://github.com/tantaman/Strut), for a presentation editor and viewer, and a Node.js server using [Socket.io](http://socket.io/) to communicate between Strut and Glass. I later rewrote the majority of the application stack, so it now uses Apple's Keynote as the presentation editor, communicating to Glass over HTTP requests via **KAAS**.\r\n\r\n[View GlassNote on Github](https://github.com/BobertForever/GlassNote)  \r\n[View Strut-for-Glassnote on Github](https://github.com/BobertForever/Strut-for-Glassnote)  \r\n[View KAAS on Github](https://github.com/BobertForever/kaas)\r\n\r\n### Rider for Hack\r\nAfter interning at Facebook during the summer of 2014, I became very interested in infrastructure development, and decided to re-write my application Paranoia again, using [Hacklang](http://hacklang.org/) and a more ground-up approach towards my design. After working on this for about a week, my interest shifted from an application to an extensible version of the infrastructure I was designing, so I started work on **Rider** for Hack. Rider is designed to be an application framework, taking care of most of the design overhead via a command-line tool, and a lot of the backend via an accompanying library.\r\n\r\n[View the Rider project on Github](https://github.com/HackRider)\r\n\r\n### Class Assignments\r\nThroughout my academic career, I have done a lot of development on class projects. These are the repositories contains the projects I have completed to date:\r\n* **cs-intro-assignments**: Intro to CS and Data Structures. This repo is not public due to University Policy. \r\n* **cs429-assignments**: Computer Architectures. This repo contains my implementation of an interpreter and assembler, a victim cache, and other projects regarding machine level operations. This repo is open since the lecturer does not teach any more.\r\n* **cs439-assignments**: Operating Systems. This repo contains my implementation of PintOS, an instructional operating system. Like the intro classes, the repository is not public.\r\n\r\n[View cs429-assignments on Github](https://github.com/BobertForever/cs429-assignments)\r\n\r\n### Texas Lambda Alpha Nu sites\r\nI am currently a member of a fraternity that myself and a couple of friends have started which focuses on social activities for those in computer related majors. The first thing I did was make the organization website, which can be found at [http://texaslan.org](http://texaslan.org). When we started accepting new members, I developed an application system, which allows people to submit an application to the organization, and for us to review those applications agnostic of identifying information, giving them ratings and comments, and then an admin panel to see all the information for an application and perform actions such as reject or delete. The backend for this is Node.js and MongoDB, which made this a tricky project since a SQL-based database and a non-callback oriented language would have been more suited for the task.\r\n\r\n[View the LAN website source on Github](https://github.com/TexasLAN/TexasLAN)  \r\n[View the Application system on Github](https://github.com/TexasLAN/LANApplications)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}